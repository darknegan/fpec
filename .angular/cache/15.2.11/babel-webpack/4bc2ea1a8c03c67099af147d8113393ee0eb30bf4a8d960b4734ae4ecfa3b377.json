{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { ObjectUtils } from 'primeng/utils';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i3 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\nimport { ThLargeIcon } from 'primeng/icons/thlarge';\nimport { BarsIcon } from 'primeng/icons/bars';\nfunction DataView_div_1_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"p-dataview-loading-icon pi-spin \" + ctx_r7.loadingIcon);\n  }\n}\nfunction DataView_div_1_ng_container_3_SpinnerIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 16);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"spin\", true)(\"styleClass\", \"p-dataview-loading-icon\");\n  }\n}\nfunction DataView_div_1_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction DataView_div_1_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataView_div_1_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction DataView_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DataView_div_1_ng_container_3_SpinnerIcon_1_Template, 1, 2, \"SpinnerIcon\", 14);\n    i0.ɵɵtemplate(2, DataView_div_1_ng_container_3_2_Template, 1, 0, null, 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.loadingIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.loadingIconTemplate);\n  }\n}\nfunction DataView_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11);\n    i0.ɵɵtemplate(2, DataView_div_1_i_2_Template, 1, 2, \"i\", 12);\n    i0.ɵɵtemplate(3, DataView_div_1_ng_container_3_Template, 3, 2, \"ng-container\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIcon);\n  }\n}\nfunction DataView_div_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DataView_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, DataView_div_2_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headerTemplate);\n  }\n}\nfunction DataView_p_paginator_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 18);\n    i0.ɵɵlistener(\"onPageChange\", function DataView_p_paginator_3_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.paginate($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r2.rows)(\"first\", ctx_r2.first)(\"totalRecords\", ctx_r2.totalRecords)(\"pageLinkSize\", ctx_r2.pageLinks)(\"alwaysShow\", ctx_r2.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r2.rowsPerPageOptions)(\"dropdownAppendTo\", ctx_r2.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r2.paginatorDropdownScrollHeight)(\"templateLeft\", ctx_r2.paginatorLeftTemplate)(\"templateRight\", ctx_r2.paginatorRightTemplate)(\"currentPageReportTemplate\", ctx_r2.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r2.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r2.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r2.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r2.showJumpToPageDropdown)(\"showPageLinks\", ctx_r2.showPageLinks);\n  }\n}\nfunction DataView_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    rowIndex: a1\n  };\n};\nfunction DataView_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataView_ng_template_6_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n  if (rf & 2) {\n    const rowData_r15 = ctx.$implicit;\n    const rowIndex_r16 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c0, rowData_r15, rowIndex_r16));\n  }\n}\nfunction DataView_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r18.emptyMessageLabel, \" \");\n  }\n}\nfunction DataView_div_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 23);\n  }\n}\nfunction DataView_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21);\n    i0.ɵɵtemplate(2, DataView_div_8_ng_container_2_Template, 2, 1, \"ng-container\", 22);\n    i0.ɵɵtemplate(3, DataView_div_8_ng_container_3_Template, 2, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.emptyMessageTemplate)(\"ngIfElse\", ctx_r4.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.emptyMessageTemplate);\n  }\n}\nfunction DataView_p_paginator_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 24);\n    i0.ɵɵlistener(\"onPageChange\", function DataView_p_paginator_9_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.paginate($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r5.rows)(\"first\", ctx_r5.first)(\"totalRecords\", ctx_r5.totalRecords)(\"pageLinkSize\", ctx_r5.pageLinks)(\"alwaysShow\", ctx_r5.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r5.rowsPerPageOptions)(\"dropdownAppendTo\", ctx_r5.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r5.paginatorDropdownScrollHeight)(\"templateLeft\", ctx_r5.paginatorLeftTemplate)(\"templateRight\", ctx_r5.paginatorRightTemplate)(\"currentPageReportTemplate\", ctx_r5.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r5.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r5.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r5.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r5.showJumpToPageDropdown)(\"showPageLinks\", ctx_r5.showPageLinks);\n  }\n}\nfunction DataView_div_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DataView_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, DataView_div_10_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footerTemplate);\n  }\n}\nconst _c1 = [[[\"p-header\"]], [[\"p-footer\"]]];\nconst _c2 = function (a1, a2) {\n  return {\n    \"p-dataview p-component\": true,\n    \"p-dataview-list\": a1,\n    \"p-dataview-grid\": a2\n  };\n};\nconst _c3 = [\"p-header\", \"p-footer\"];\nfunction DataViewLayoutOptions_BarsIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"BarsIcon\");\n  }\n}\nfunction DataViewLayoutOptions_3_ng_template_0_Template(rf, ctx) {}\nfunction DataViewLayoutOptions_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataViewLayoutOptions_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction DataViewLayoutOptions_ThLargeIcon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ThLargeIcon\");\n  }\n}\nfunction DataViewLayoutOptions_6_ng_template_0_Template(rf, ctx) {}\nfunction DataViewLayoutOptions_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DataViewLayoutOptions_6_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst _c4 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\nlet DataView = /*#__PURE__*/(() => {\n  class DataView {\n    constructor(el, cd, filterService, config) {\n      this.el = el;\n      this.cd = cd;\n      this.filterService = filterService;\n      this.config = config;\n      this.pageLinks = 5;\n      this.paginatorPosition = 'bottom';\n      this.alwaysShowPaginator = true;\n      this.paginatorDropdownScrollHeight = '200px';\n      this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n      this.showFirstLastIcon = true;\n      this.showPageLinks = true;\n      this.emptyMessage = '';\n      this.onLazyLoad = new EventEmitter();\n      this.gridStyleClass = '';\n      this.trackBy = (index, item) => item;\n      this.first = 0;\n      this.onPage = new EventEmitter();\n      this.onSort = new EventEmitter();\n      this.onChangeLayout = new EventEmitter();\n      this._layout = 'list';\n    }\n    get layout() {\n      return this._layout;\n    }\n    set layout(layout) {\n      this._layout = layout;\n      if (this.initialized) {\n        this.changeLayout(layout);\n      }\n    }\n    ngOnInit() {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n      this.translationSubscription = this.config.translationObserver.subscribe(() => {\n        this.cd.markForCheck();\n      });\n      this.initialized = true;\n    }\n    ngOnChanges(simpleChanges) {\n      if (simpleChanges.value) {\n        this._value = simpleChanges.value.currentValue;\n        this.updateTotalRecords();\n        if (!this.lazy && this.hasFilter()) {\n          this.filter(this.filterValue);\n        }\n      }\n      if (simpleChanges.sortField || simpleChanges.sortOrder) {\n        //avoid triggering lazy load prior to lazy initialization at onInit\n        if (!this.lazy || this.initialized) {\n          this.sort();\n        }\n      }\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'listItem':\n            this.listItemTemplate = item.template;\n            break;\n          case 'gridItem':\n            this.gridItemTemplate = item.template;\n            break;\n          case 'paginatorleft':\n            this.paginatorLeftTemplate = item.template;\n            break;\n          case 'paginatorright':\n            this.paginatorRightTemplate = item.template;\n            break;\n          case 'paginatordropdownitem':\n            this.paginatorDropdownItemTemplate = item.template;\n            break;\n          case 'empty':\n            this.emptyMessageTemplate = item.template;\n            break;\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n          case 'loadingicon':\n            this.loadingIconTemplate = item.template;\n            break;\n          case 'listicon':\n            this.listIconTemplate = item.template;\n            break;\n          case 'gridicon':\n            this.gridIconTemplate = item.template;\n            break;\n        }\n      });\n      this.updateItemTemplate();\n    }\n    updateItemTemplate() {\n      switch (this.layout) {\n        case 'list':\n          this.itemTemplate = this.listItemTemplate;\n          break;\n        case 'grid':\n          this.itemTemplate = this.gridItemTemplate;\n          break;\n      }\n    }\n    changeLayout(layout) {\n      this._layout = layout;\n      this.onChangeLayout.emit({\n        layout: this.layout\n      });\n      this.updateItemTemplate();\n      this.cd.markForCheck();\n    }\n    updateTotalRecords() {\n      this.totalRecords = this.lazy ? this.totalRecords : this._value ? this._value.length : 0;\n    }\n    paginate(event) {\n      this.first = event.first;\n      this.rows = event.rows;\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n      this.onPage.emit({\n        first: this.first,\n        rows: this.rows\n      });\n    }\n    sort() {\n      this.first = 0;\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        this.value.sort((data1, data2) => {\n          let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n          let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n          let result = null;\n          if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n          return this.sortOrder * result;\n        });\n        if (this.hasFilter()) {\n          this.filter(this.filterValue);\n        }\n      }\n      this.onSort.emit({\n        sortField: this.sortField,\n        sortOrder: this.sortOrder\n      });\n    }\n    isEmpty() {\n      let data = this.filteredValue || this.value;\n      return data == null || data.length == 0;\n    }\n    createLazyLoadMetadata() {\n      return {\n        first: this.first,\n        rows: this.rows,\n        sortField: this.sortField,\n        sortOrder: this.sortOrder\n      };\n    }\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n    get emptyMessageLabel() {\n      return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    filter(filter, filterMatchMode = 'contains') {\n      this.filterValue = filter;\n      if (this.value && this.value.length) {\n        let searchFields = this.filterBy.split(',');\n        this.filteredValue = this.filterService.filter(this.value, searchFields, filter, filterMatchMode, this.filterLocale);\n        if (this.filteredValue.length === this.value.length) {\n          this.filteredValue = null;\n        }\n        if (this.paginator) {\n          this.first = 0;\n          this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n        }\n        this.cd.markForCheck();\n      }\n    }\n    hasFilter() {\n      return this.filterValue && this.filterValue.trim().length > 0;\n    }\n    ngOnDestroy() {\n      if (this.translationSubscription) {\n        this.translationSubscription.unsubscribe();\n      }\n    }\n  }\n  DataView.ɵfac = function DataView_Factory(t) {\n    return new (t || DataView)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FilterService), i0.ɵɵdirectiveInject(i1.PrimeNGConfig));\n  };\n  DataView.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DataView,\n    selectors: [[\"p-dataView\"]],\n    contentQueries: function DataView_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, Header, 5);\n        i0.ɵɵcontentQuery(dirIndex, Footer, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      paginator: \"paginator\",\n      rows: \"rows\",\n      totalRecords: \"totalRecords\",\n      pageLinks: \"pageLinks\",\n      rowsPerPageOptions: \"rowsPerPageOptions\",\n      paginatorPosition: \"paginatorPosition\",\n      alwaysShowPaginator: \"alwaysShowPaginator\",\n      paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n      paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n      currentPageReportTemplate: \"currentPageReportTemplate\",\n      showCurrentPageReport: \"showCurrentPageReport\",\n      showJumpToPageDropdown: \"showJumpToPageDropdown\",\n      showFirstLastIcon: \"showFirstLastIcon\",\n      showPageLinks: \"showPageLinks\",\n      lazy: \"lazy\",\n      emptyMessage: \"emptyMessage\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      gridStyleClass: \"gridStyleClass\",\n      trackBy: \"trackBy\",\n      filterBy: \"filterBy\",\n      filterLocale: \"filterLocale\",\n      loading: \"loading\",\n      loadingIcon: \"loadingIcon\",\n      first: \"first\",\n      sortField: \"sortField\",\n      sortOrder: \"sortOrder\",\n      value: \"value\",\n      layout: \"layout\"\n    },\n    outputs: {\n      onLazyLoad: \"onLazyLoad\",\n      onPage: \"onPage\",\n      onSort: \"onSort\",\n      onChangeLayout: \"onChangeLayout\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 11,\n    vars: 20,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-dataview-loading\", 4, \"ngIf\"], [\"class\", \"p-dataview-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"templateLeft\", \"templateRight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [1, \"p-dataview-content\"], [1, \"p-grid\", \"p-nogutter\", \"grid\", \"grid-nogutter\", 3, \"ngClass\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"p-col col\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"templateLeft\", \"templateRight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-dataview-footer\", 4, \"ngIf\"], [1, \"p-dataview-loading\"], [1, \"p-dataview-loading-overlay\", \"p-component-overlay\"], [3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"spin\", \"styleClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [3, \"spin\", \"styleClass\"], [1, \"p-dataview-header\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"templateLeft\", \"templateRight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-col\", \"col\"], [1, \"p-dataview-emptymessage\"], [4, \"ngIf\", \"ngIfElse\"], [\"emptyFilter\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"templateLeft\", \"templateRight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-dataview-footer\"]],\n    template: function DataView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DataView_div_1_Template, 4, 2, \"div\", 1);\n        i0.ɵɵtemplate(2, DataView_div_2_Template, 3, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, DataView_p_paginator_3_Template, 1, 16, \"p-paginator\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵtemplate(6, DataView_ng_template_6_Template, 1, 5, \"ng-template\", 6);\n        i0.ɵɵpipe(7, \"slice\");\n        i0.ɵɵtemplate(8, DataView_div_8_Template, 4, 3, \"div\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, DataView_p_paginator_9_Template, 1, 16, \"p-paginator\", 8);\n        i0.ɵɵtemplate(10, DataView_div_10_Template, 3, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c2, ctx.layout === \"list\", ctx.layout === \"grid\"))(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.header || ctx.headerTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.gridStyleClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.paginator ? i0.ɵɵpipeBind3(7, 13, ctx.filteredValue || ctx.value, ctx.lazy ? 0 : ctx.first, (ctx.lazy ? 0 : ctx.first) + ctx.rows) : ctx.filteredValue || ctx.value)(\"ngForTrackBy\", ctx.trackBy);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEmpty() && !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.footer || ctx.footerTemplate);\n      }\n    },\n    dependencies: function () {\n      return [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.Paginator, SpinnerIcon, i2.SlicePipe];\n    },\n    styles: [\".p-dataview{position:relative}.p-dataview .p-dataview-loading-overlay{position:absolute;display:flex;align-items:center;justify-content:center;z-index:2}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return DataView;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DataViewLayoutOptions = /*#__PURE__*/(() => {\n  class DataViewLayoutOptions {\n    constructor(dv) {\n      this.dv = dv;\n    }\n    changeLayout(event, layout) {\n      this.dv.changeLayout(layout);\n      event.preventDefault();\n    }\n  }\n  DataViewLayoutOptions.ɵfac = function DataViewLayoutOptions_Factory(t) {\n    return new (t || DataViewLayoutOptions)(i0.ɵɵdirectiveInject(DataView));\n  };\n  DataViewLayoutOptions.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DataViewLayoutOptions,\n    selectors: [[\"p-dataViewLayoutOptions\"]],\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      style: \"style\",\n      styleClass: \"styleClass\"\n    },\n    decls: 7,\n    vars: 14,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"type\", \"button\", 1, \"p-button\", \"p-button-icon-only\", 3, \"ngClass\", \"click\", \"keydown.enter\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n    template: function DataViewLayoutOptions_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DataViewLayoutOptions_Template_button_click_1_listener($event) {\n          return ctx.changeLayout($event, \"list\");\n        })(\"keydown.enter\", function DataViewLayoutOptions_Template_button_keydown_enter_1_listener($event) {\n          return ctx.changeLayout($event, \"list\");\n        });\n        i0.ɵɵtemplate(2, DataViewLayoutOptions_BarsIcon_2_Template, 1, 0, \"BarsIcon\", 2);\n        i0.ɵɵtemplate(3, DataViewLayoutOptions_3_Template, 1, 0, null, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DataViewLayoutOptions_Template_button_click_4_listener($event) {\n          return ctx.changeLayout($event, \"grid\");\n        })(\"keydown.enter\", function DataViewLayoutOptions_Template_button_keydown_enter_4_listener($event) {\n          return ctx.changeLayout($event, \"grid\");\n        });\n        i0.ɵɵtemplate(5, DataViewLayoutOptions_ThLargeIcon_5_Template, 1, 0, \"ThLargeIcon\", 2);\n        i0.ɵɵtemplate(6, DataViewLayoutOptions_6_Template, 1, 0, null, 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-dataview-layout-options p-selectbutton p-buttonset\")(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c4, ctx.dv.layout === \"list\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dv.listIconTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.dv.listIconTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c4, ctx.dv.layout === \"grid\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dv.gridIconTemplate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.dv.gridIconTemplate);\n      }\n    },\n    dependencies: function () {\n      return [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, BarsIcon, ThLargeIcon];\n    },\n    encapsulation: 2\n  });\n  return DataViewLayoutOptions;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DataViewModule = /*#__PURE__*/(() => {\n  class DataViewModule {}\n  DataViewModule.ɵfac = function DataViewModule_Factory(t) {\n    return new (t || DataViewModule)();\n  };\n  DataViewModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DataViewModule\n  });\n  DataViewModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, PaginatorModule, SpinnerIcon, BarsIcon, ThLargeIcon, SharedModule]\n  });\n  return DataViewModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DataView, DataViewLayoutOptions, DataViewModule };\n//# sourceMappingURL=primeng-dataview.mjs.map\n//# sourceMappingURL=primeng-dataview.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}